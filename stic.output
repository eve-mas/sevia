Terminals unused in grammar

   VAR
   END
   LTL
   ENVIRONMENT


State 6 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 41 conflicts: 2 shift/reduce
State 52 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce
State 55 conflicts: 2 shift/reduce
State 56 conflicts: 4 shift/reduce
State 57 conflicts: 4 shift/reduce
State 58 conflicts: 1 shift/reduce
State 78 conflicts: 2 shift/reduce
State 79 conflicts: 4 shift/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce
State 90 conflicts: 2 shift/reduce
State 92 conflicts: 2 shift/reduce
State 93 conflicts: 2 shift/reduce
State 94 conflicts: 4 shift/reduce
State 95 conflicts: 4 shift/reduce
State 103 conflicts: 2 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 111 conflicts: 4 shift/reduce
State 112 conflicts: 4 shift/reduce


Grammar

    0 $accept: input $end

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE update_y
    3      | input input

    4 var_y: ISI
    5      | var_y COMMA var_y

    6 id_y: ISI

    7 init_y: DCOL init_command
    8       | init_y DCOL init_command

    9 init_command: init_condition ASSIGN init_next_state

   10 update_command: update_condition ASSIGN update_next_state

   11 init_condition: TRUE
   12               | FALSE

   13 formula_guard: ISI
   14              | TRUE
   15              | FALSE
   16              | formula_guard OR formula_guard
   17              | formula_guard AND formula_guard
   18              | formula_guard IMPLIES formula_guard
   19              | formula_guard IFF formula_guard
   20              | NOT formula_guard
   21              | LB formula_guard RB

   22 formula_assign: ISI
   23               | TRUE
   24               | FALSE
   25               | formula_assign OR formula_assign
   26               | formula_assign AND formula_assign
   27               | formula_assign IMPLIES formula_assign
   28               | formula_assign IFF formula_assign
   29               | NOT formula_assign
   30               | LB formula_assign RB

   31 update_condition: formula_guard
   32                 | update_condition COMMA update_condition

   33 init_next_state: ISI NEXT EQUALS TRUE
   34                | ISI NEXT EQUALS FALSE
   35                | init_next_state COMMA init_next_state
   36                | init_next_state SEMICOLON

   37 update_next_state: ISI NEXT EQUALS formula_assign
   38                  | update_next_state COMMA update_next_state
   39                  | update_next_state SEMICOLON

   40 update_y: DCOL update_command
   41         | update_y DCOL update_command

   42 gf: ISI
   43   | TRUE
   44   | FALSE
   45   | gf OR gf
   46   | gf AND gf
   47   | gf IMPLIES gf
   48   | gf IFF gf
   49   | G gf
   50   | F gf
   51   | X gf
   52   | U gf
   53   | NOT gf
   54   | LB gf RB

   55 goal_form: DCOL gf SEMICOLON
   56          | goal_form SL gf


Terminals, with rules where they appear

$end (0) 0
error (256)
MODULE (258) 1 2
ISI (259) 4 6 13 22 33 34 37 42
CONTROL (260) 1 2
VAR (261)
INIT (262) 1 2
UPDATE (263) 1 2
END (264)
COMMA (265) 5 32 35 38
DCOL (266) 7 8 40 41 55
ASSIGN (267) 9 10
TRUE (268) 11 14 23 33 43
FALSE (269) 12 15 24 34 44
EQUALS (270) 33 34 37
NEXT (271) 33 34 37
SEMICOLON (272) 36 39 55
GOAL (273) 1
OR (274) 16 25 45
AND (275) 17 26 46
IMPLIES (276) 18 27 47
IFF (277) 19 28 48
LB (278) 21 30 54
RB (279) 21 30 54
NOT (280) 20 29 53
LTL (281)
G (282) 49
F (283) 50
X (284) 51
U (285) 52
ENVIRONMENT (286)
SL (287) 56


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
input (34)
    on left: 1 2 3, on right: 0 3
var_y (35)
    on left: 4 5, on right: 1 2 5
id_y (36)
    on left: 6, on right: 1 2
init_y (37)
    on left: 7 8, on right: 1 2 8
init_command (38)
    on left: 9, on right: 7 8
update_command (39)
    on left: 10, on right: 40 41
init_condition (40)
    on left: 11 12, on right: 9
formula_guard (41)
    on left: 13 14 15 16 17 18 19 20 21, on right: 16 17 18 19 20 21
    31
formula_assign (42)
    on left: 22 23 24 25 26 27 28 29 30, on right: 25 26 27 28 29 30
    37
update_condition (43)
    on left: 31 32, on right: 10 32
init_next_state (44)
    on left: 33 34 35 36, on right: 9 35 36
update_next_state (45)
    on left: 37 38 39, on right: 10 38 39
update_y (46)
    on left: 40 41, on right: 1 2 41
gf (47)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54, on right: 45 46
    47 48 49 50 51 52 53 54 55 56
goal_form (48)
    on left: 55 56, on right: 1 56


State 0

    0 $accept: . input $end

    MODULE  shift, and go to state 1

    input  go to state 2


State 1

    1 input: MODULE . id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE . id_y CONTROL var_y INIT init_y UPDATE update_y

    ISI  shift, and go to state 3

    id_y  go to state 4


State 2

    0 $accept: input . $end
    3 input: input . input

    $end    shift, and go to state 5
    MODULE  shift, and go to state 1

    input  go to state 6


State 3

    6 id_y: ISI .

    $default  reduce using rule 6 (id_y)


State 4

    1 input: MODULE id_y . CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y . CONTROL var_y INIT init_y UPDATE update_y

    CONTROL  shift, and go to state 7


State 5

    0 $accept: input $end .

    $default  accept


State 6

    3 input: input . input
    3      | input input .

    MODULE  shift, and go to state 1

    MODULE    [reduce using rule 3 (input)]
    $default  reduce using rule 3 (input)

    input  go to state 6


State 7

    1 input: MODULE id_y CONTROL . var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL . var_y INIT init_y UPDATE update_y

    ISI  shift, and go to state 8

    var_y  go to state 9


State 8

    4 var_y: ISI .

    $default  reduce using rule 4 (var_y)


State 9

    1 input: MODULE id_y CONTROL var_y . INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y . INIT init_y UPDATE update_y
    5 var_y: var_y . COMMA var_y

    INIT   shift, and go to state 10
    COMMA  shift, and go to state 11


State 10

    1 input: MODULE id_y CONTROL var_y INIT . init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT . init_y UPDATE update_y

    DCOL  shift, and go to state 12

    init_y  go to state 13


State 11

    5 var_y: var_y COMMA . var_y

    ISI  shift, and go to state 8

    var_y  go to state 14


State 12

    7 init_y: DCOL . init_command

    TRUE   shift, and go to state 15
    FALSE  shift, and go to state 16

    init_command    go to state 17
    init_condition  go to state 18


State 13

    1 input: MODULE id_y CONTROL var_y INIT init_y . UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y . UPDATE update_y
    8 init_y: init_y . DCOL init_command

    UPDATE  shift, and go to state 19
    DCOL    shift, and go to state 20


State 14

    5 var_y: var_y . COMMA var_y
    5      | var_y COMMA var_y .

    COMMA  shift, and go to state 11

    COMMA     [reduce using rule 5 (var_y)]
    $default  reduce using rule 5 (var_y)


State 15

   11 init_condition: TRUE .

    $default  reduce using rule 11 (init_condition)


State 16

   12 init_condition: FALSE .

    $default  reduce using rule 12 (init_condition)


State 17

    7 init_y: DCOL init_command .

    $default  reduce using rule 7 (init_y)


State 18

    9 init_command: init_condition . ASSIGN init_next_state

    ASSIGN  shift, and go to state 21


State 19

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE . update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE . update_y

    DCOL  shift, and go to state 22

    update_y  go to state 23


State 20

    8 init_y: init_y DCOL . init_command

    TRUE   shift, and go to state 15
    FALSE  shift, and go to state 16

    init_command    go to state 24
    init_condition  go to state 18


State 21

    9 init_command: init_condition ASSIGN . init_next_state

    ISI  shift, and go to state 25

    init_next_state  go to state 26


State 22

   40 update_y: DCOL . update_command

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    update_command    go to state 32
    formula_guard     go to state 33
    update_condition  go to state 34


State 23

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y . GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE update_y .
   41 update_y: update_y . DCOL update_command

    DCOL  shift, and go to state 35
    GOAL  shift, and go to state 36

    $default  reduce using rule 2 (input)


State 24

    8 init_y: init_y DCOL init_command .

    $default  reduce using rule 8 (init_y)


State 25

   33 init_next_state: ISI . NEXT EQUALS TRUE
   34                | ISI . NEXT EQUALS FALSE

    NEXT  shift, and go to state 37


State 26

    9 init_command: init_condition ASSIGN init_next_state .
   35 init_next_state: init_next_state . COMMA init_next_state
   36                | init_next_state . SEMICOLON

    COMMA      shift, and go to state 38
    SEMICOLON  shift, and go to state 39

    $default  reduce using rule 9 (init_command)


State 27

   13 formula_guard: ISI .

    $default  reduce using rule 13 (formula_guard)


State 28

   14 formula_guard: TRUE .

    $default  reduce using rule 14 (formula_guard)


State 29

   15 formula_guard: FALSE .

    $default  reduce using rule 15 (formula_guard)


State 30

   21 formula_guard: LB . formula_guard RB

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 40


State 31

   20 formula_guard: NOT . formula_guard

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 41


State 32

   40 update_y: DCOL update_command .

    $default  reduce using rule 40 (update_y)


State 33

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard
   31 update_condition: formula_guard .

    OR       shift, and go to state 42
    AND      shift, and go to state 43
    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    $default  reduce using rule 31 (update_condition)


State 34

   10 update_command: update_condition . ASSIGN update_next_state
   32 update_condition: update_condition . COMMA update_condition

    COMMA   shift, and go to state 46
    ASSIGN  shift, and go to state 47


State 35

   41 update_y: update_y DCOL . update_command

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    update_command    go to state 48
    formula_guard     go to state 33
    update_condition  go to state 34


State 36

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL . goal_form

    DCOL  shift, and go to state 49

    goal_form  go to state 50


State 37

   33 init_next_state: ISI NEXT . EQUALS TRUE
   34                | ISI NEXT . EQUALS FALSE

    EQUALS  shift, and go to state 51


State 38

   35 init_next_state: init_next_state COMMA . init_next_state

    ISI  shift, and go to state 25

    init_next_state  go to state 52


State 39

   36 init_next_state: init_next_state SEMICOLON .

    $default  reduce using rule 36 (init_next_state)


State 40

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard
   21              | LB formula_guard . RB

    OR       shift, and go to state 42
    AND      shift, and go to state 43
    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45
    RB       shift, and go to state 53


State 41

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard
   20              | NOT formula_guard .

    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    IMPLIES   [reduce using rule 20 (formula_guard)]
    IFF       [reduce using rule 20 (formula_guard)]
    $default  reduce using rule 20 (formula_guard)


State 42

   16 formula_guard: formula_guard OR . formula_guard

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 54


State 43

   17 formula_guard: formula_guard AND . formula_guard

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 55


State 44

   18 formula_guard: formula_guard IMPLIES . formula_guard

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 56


State 45

   19 formula_guard: formula_guard IFF . formula_guard

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard  go to state 57


State 46

   32 update_condition: update_condition COMMA . update_condition

    ISI    shift, and go to state 27
    TRUE   shift, and go to state 28
    FALSE  shift, and go to state 29
    LB     shift, and go to state 30
    NOT    shift, and go to state 31

    formula_guard     go to state 33
    update_condition  go to state 58


State 47

   10 update_command: update_condition ASSIGN . update_next_state

    ISI  shift, and go to state 59

    update_next_state  go to state 60


State 48

   41 update_y: update_y DCOL update_command .

    $default  reduce using rule 41 (update_y)


State 49

   55 goal_form: DCOL . gf SEMICOLON

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 70


State 50

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .
   56 goal_form: goal_form . SL gf

    SL  shift, and go to state 71

    $default  reduce using rule 1 (input)


State 51

   33 init_next_state: ISI NEXT EQUALS . TRUE
   34                | ISI NEXT EQUALS . FALSE

    TRUE   shift, and go to state 72
    FALSE  shift, and go to state 73


State 52

   35 init_next_state: init_next_state . COMMA init_next_state
   35                | init_next_state COMMA init_next_state .
   36                | init_next_state . SEMICOLON

    COMMA      shift, and go to state 38
    SEMICOLON  shift, and go to state 39

    COMMA      [reduce using rule 35 (init_next_state)]
    SEMICOLON  [reduce using rule 35 (init_next_state)]
    $default   reduce using rule 35 (init_next_state)


State 53

   21 formula_guard: LB formula_guard RB .

    $default  reduce using rule 21 (formula_guard)


State 54

   16 formula_guard: formula_guard . OR formula_guard
   16              | formula_guard OR formula_guard .
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard

    AND      shift, and go to state 43
    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    IMPLIES   [reduce using rule 16 (formula_guard)]
    IFF       [reduce using rule 16 (formula_guard)]
    $default  reduce using rule 16 (formula_guard)


State 55

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   17              | formula_guard AND formula_guard .
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard

    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    IMPLIES   [reduce using rule 17 (formula_guard)]
    IFF       [reduce using rule 17 (formula_guard)]
    $default  reduce using rule 17 (formula_guard)


State 56

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   18              | formula_guard IMPLIES formula_guard .
   19              | formula_guard . IFF formula_guard

    OR       shift, and go to state 42
    AND      shift, and go to state 43
    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    OR        [reduce using rule 18 (formula_guard)]
    AND       [reduce using rule 18 (formula_guard)]
    IMPLIES   [reduce using rule 18 (formula_guard)]
    IFF       [reduce using rule 18 (formula_guard)]
    $default  reduce using rule 18 (formula_guard)


State 57

   16 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard . AND formula_guard
   18              | formula_guard . IMPLIES formula_guard
   19              | formula_guard . IFF formula_guard
   19              | formula_guard IFF formula_guard .

    OR       shift, and go to state 42
    AND      shift, and go to state 43
    IMPLIES  shift, and go to state 44
    IFF      shift, and go to state 45

    OR        [reduce using rule 19 (formula_guard)]
    AND       [reduce using rule 19 (formula_guard)]
    IMPLIES   [reduce using rule 19 (formula_guard)]
    IFF       [reduce using rule 19 (formula_guard)]
    $default  reduce using rule 19 (formula_guard)


State 58

   32 update_condition: update_condition . COMMA update_condition
   32                 | update_condition COMMA update_condition .

    COMMA  shift, and go to state 46

    COMMA     [reduce using rule 32 (update_condition)]
    $default  reduce using rule 32 (update_condition)


State 59

   37 update_next_state: ISI . NEXT EQUALS formula_assign

    NEXT  shift, and go to state 74


State 60

   10 update_command: update_condition ASSIGN update_next_state .
   38 update_next_state: update_next_state . COMMA update_next_state
   39                  | update_next_state . SEMICOLON

    COMMA      shift, and go to state 75
    SEMICOLON  shift, and go to state 76

    $default  reduce using rule 10 (update_command)


State 61

   42 gf: ISI .

    $default  reduce using rule 42 (gf)


State 62

   43 gf: TRUE .

    $default  reduce using rule 43 (gf)


State 63

   44 gf: FALSE .

    $default  reduce using rule 44 (gf)


State 64

   54 gf: LB . gf RB

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 77


State 65

   53 gf: NOT . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 78


State 66

   49 gf: G . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 79


State 67

   50 gf: F . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 80


State 68

   51 gf: X . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 81


State 69

   52 gf: U . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 82


State 70

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   55 goal_form: DCOL gf . SEMICOLON

    SEMICOLON  shift, and go to state 83
    OR         shift, and go to state 84
    AND        shift, and go to state 85
    IMPLIES    shift, and go to state 86
    IFF        shift, and go to state 87


State 71

   56 goal_form: goal_form SL . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 88


State 72

   33 init_next_state: ISI NEXT EQUALS TRUE .

    $default  reduce using rule 33 (init_next_state)


State 73

   34 init_next_state: ISI NEXT EQUALS FALSE .

    $default  reduce using rule 34 (init_next_state)


State 74

   37 update_next_state: ISI NEXT . EQUALS formula_assign

    EQUALS  shift, and go to state 89


State 75

   38 update_next_state: update_next_state COMMA . update_next_state

    ISI  shift, and go to state 59

    update_next_state  go to state 90


State 76

   39 update_next_state: update_next_state SEMICOLON .

    $default  reduce using rule 39 (update_next_state)


State 77

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   54   | LB gf . RB

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87
    RB       shift, and go to state 91


State 78

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   53   | NOT gf .

    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    IMPLIES   [reduce using rule 53 (gf)]
    IFF       [reduce using rule 53 (gf)]
    $default  reduce using rule 53 (gf)


State 79

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   49   | G gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 49 (gf)]
    AND       [reduce using rule 49 (gf)]
    IMPLIES   [reduce using rule 49 (gf)]
    IFF       [reduce using rule 49 (gf)]
    $default  reduce using rule 49 (gf)


State 80

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   50   | F gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 50 (gf)]
    AND       [reduce using rule 50 (gf)]
    IMPLIES   [reduce using rule 50 (gf)]
    IFF       [reduce using rule 50 (gf)]
    $default  reduce using rule 50 (gf)


State 81

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   51   | X gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 51 (gf)]
    AND       [reduce using rule 51 (gf)]
    IMPLIES   [reduce using rule 51 (gf)]
    IFF       [reduce using rule 51 (gf)]
    $default  reduce using rule 51 (gf)


State 82

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   52   | U gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 52 (gf)]
    AND       [reduce using rule 52 (gf)]
    IMPLIES   [reduce using rule 52 (gf)]
    IFF       [reduce using rule 52 (gf)]
    $default  reduce using rule 52 (gf)


State 83

   55 goal_form: DCOL gf SEMICOLON .

    $default  reduce using rule 55 (goal_form)


State 84

   45 gf: gf OR . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 92


State 85

   46 gf: gf AND . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 93


State 86

   47 gf: gf IMPLIES . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 94


State 87

   48 gf: gf IFF . gf

    ISI    shift, and go to state 61
    TRUE   shift, and go to state 62
    FALSE  shift, and go to state 63
    LB     shift, and go to state 64
    NOT    shift, and go to state 65
    G      shift, and go to state 66
    F      shift, and go to state 67
    X      shift, and go to state 68
    U      shift, and go to state 69

    gf  go to state 95


State 88

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   56 goal_form: goal_form SL gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    $default  reduce using rule 56 (goal_form)


State 89

   37 update_next_state: ISI NEXT EQUALS . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 101


State 90

   38 update_next_state: update_next_state . COMMA update_next_state
   38                  | update_next_state COMMA update_next_state .
   39                  | update_next_state . SEMICOLON

    COMMA      shift, and go to state 75
    SEMICOLON  shift, and go to state 76

    COMMA      [reduce using rule 38 (update_next_state)]
    SEMICOLON  [reduce using rule 38 (update_next_state)]
    $default   reduce using rule 38 (update_next_state)


State 91

   54 gf: LB gf RB .

    $default  reduce using rule 54 (gf)


State 92

   45 gf: gf . OR gf
   45   | gf OR gf .
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf

    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    IMPLIES   [reduce using rule 45 (gf)]
    IFF       [reduce using rule 45 (gf)]
    $default  reduce using rule 45 (gf)


State 93

   45 gf: gf . OR gf
   46   | gf . AND gf
   46   | gf AND gf .
   47   | gf . IMPLIES gf
   48   | gf . IFF gf

    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    IMPLIES   [reduce using rule 46 (gf)]
    IFF       [reduce using rule 46 (gf)]
    $default  reduce using rule 46 (gf)


State 94

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   47   | gf IMPLIES gf .
   48   | gf . IFF gf

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 47 (gf)]
    AND       [reduce using rule 47 (gf)]
    IMPLIES   [reduce using rule 47 (gf)]
    IFF       [reduce using rule 47 (gf)]
    $default  reduce using rule 47 (gf)


State 95

   45 gf: gf . OR gf
   46   | gf . AND gf
   47   | gf . IMPLIES gf
   48   | gf . IFF gf
   48   | gf IFF gf .

    OR       shift, and go to state 84
    AND      shift, and go to state 85
    IMPLIES  shift, and go to state 86
    IFF      shift, and go to state 87

    OR        [reduce using rule 48 (gf)]
    AND       [reduce using rule 48 (gf)]
    IMPLIES   [reduce using rule 48 (gf)]
    IFF       [reduce using rule 48 (gf)]
    $default  reduce using rule 48 (gf)


State 96

   22 formula_assign: ISI .

    $default  reduce using rule 22 (formula_assign)


State 97

   23 formula_assign: TRUE .

    $default  reduce using rule 23 (formula_assign)


State 98

   24 formula_assign: FALSE .

    $default  reduce using rule 24 (formula_assign)


State 99

   30 formula_assign: LB . formula_assign RB

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 102


State 100

   29 formula_assign: NOT . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 103


State 101

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign
   37 update_next_state: ISI NEXT EQUALS formula_assign .

    OR       shift, and go to state 104
    AND      shift, and go to state 105
    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    $default  reduce using rule 37 (update_next_state)


State 102

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign
   30               | LB formula_assign . RB

    OR       shift, and go to state 104
    AND      shift, and go to state 105
    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107
    RB       shift, and go to state 108


State 103

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign
   29               | NOT formula_assign .

    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    IMPLIES   [reduce using rule 29 (formula_assign)]
    IFF       [reduce using rule 29 (formula_assign)]
    $default  reduce using rule 29 (formula_assign)


State 104

   25 formula_assign: formula_assign OR . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 109


State 105

   26 formula_assign: formula_assign AND . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 110


State 106

   27 formula_assign: formula_assign IMPLIES . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 111


State 107

   28 formula_assign: formula_assign IFF . formula_assign

    ISI    shift, and go to state 96
    TRUE   shift, and go to state 97
    FALSE  shift, and go to state 98
    LB     shift, and go to state 99
    NOT    shift, and go to state 100

    formula_assign  go to state 112


State 108

   30 formula_assign: LB formula_assign RB .

    $default  reduce using rule 30 (formula_assign)


State 109

   25 formula_assign: formula_assign . OR formula_assign
   25               | formula_assign OR formula_assign .
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign

    AND      shift, and go to state 105
    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    IMPLIES   [reduce using rule 25 (formula_assign)]
    IFF       [reduce using rule 25 (formula_assign)]
    $default  reduce using rule 25 (formula_assign)


State 110

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   26               | formula_assign AND formula_assign .
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign

    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    IMPLIES   [reduce using rule 26 (formula_assign)]
    IFF       [reduce using rule 26 (formula_assign)]
    $default  reduce using rule 26 (formula_assign)


State 111

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   27               | formula_assign IMPLIES formula_assign .
   28               | formula_assign . IFF formula_assign

    OR       shift, and go to state 104
    AND      shift, and go to state 105
    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    OR        [reduce using rule 27 (formula_assign)]
    AND       [reduce using rule 27 (formula_assign)]
    IMPLIES   [reduce using rule 27 (formula_assign)]
    IFF       [reduce using rule 27 (formula_assign)]
    $default  reduce using rule 27 (formula_assign)


State 112

   25 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign . AND formula_assign
   27               | formula_assign . IMPLIES formula_assign
   28               | formula_assign . IFF formula_assign
   28               | formula_assign IFF formula_assign .

    OR       shift, and go to state 104
    AND      shift, and go to state 105
    IMPLIES  shift, and go to state 106
    IFF      shift, and go to state 107

    OR        [reduce using rule 28 (formula_assign)]
    AND       [reduce using rule 28 (formula_assign)]
    IMPLIES   [reduce using rule 28 (formula_assign)]
    IFF       [reduce using rule 28 (formula_assign)]
    $default  reduce using rule 28 (formula_assign)
