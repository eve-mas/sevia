Terminals unused in grammar

   VAR
   END
   LTL
   ENVIRONMENT


State 7 conflicts: 2 shift/reduce
State 27 conflicts: 2 shift/reduce
State 28 conflicts: 4 shift/reduce
State 29 conflicts: 4 shift/reduce
State 30 conflicts: 4 shift/reduce
State 31 conflicts: 4 shift/reduce
State 40 conflicts: 1 shift/reduce
State 42 conflicts: 2 shift/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 4 shift/reduce
State 45 conflicts: 4 shift/reduce
State 72 conflicts: 2 shift/reduce
State 82 conflicts: 2 shift/reduce
State 84 conflicts: 2 shift/reduce
State 85 conflicts: 2 shift/reduce
State 86 conflicts: 4 shift/reduce
State 87 conflicts: 4 shift/reduce
State 88 conflicts: 1 shift/reduce
State 97 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 111 conflicts: 2 shift/reduce
State 112 conflicts: 2 shift/reduce
State 113 conflicts: 4 shift/reduce
State 114 conflicts: 4 shift/reduce


Grammar

    0 $accept: input $end

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE update_y
    3      | input input
    4      | input PROPF goal_form

    5 var_y: ISI
    6      | var_y COMMA var_y

    7 id_y: ISI

    8 init_y: DCOL init_command
    9       | init_y DCOL init_command

   10 init_command: init_condition ASSIGN init_next_state

   11 update_command: update_condition ASSIGN update_next_state

   12 init_condition: TRUE
   13               | FALSE

   14 formula_guard: ISI
   15              | TRUE
   16              | FALSE
   17              | formula_guard OR formula_guard
   18              | formula_guard AND formula_guard
   19              | formula_guard IMPLIES formula_guard
   20              | formula_guard IFF formula_guard
   21              | NOT formula_guard
   22              | LB formula_guard RB

   23 formula_assign: ISI
   24               | TRUE
   25               | FALSE
   26               | formula_assign OR formula_assign
   27               | formula_assign AND formula_assign
   28               | formula_assign IMPLIES formula_assign
   29               | formula_assign IFF formula_assign
   30               | NOT formula_assign
   31               | LB formula_assign RB

   32 update_condition: formula_guard
   33                 | update_condition COMMA update_condition

   34 init_next_state: ISI NEXT EQUALS TRUE
   35                | ISI NEXT EQUALS FALSE
   36                | init_next_state COMMA init_next_state
   37                | init_next_state SEMICOLON

   38 update_next_state: ISI NEXT EQUALS formula_assign
   39                  | update_next_state COMMA update_next_state
   40                  | update_next_state SEMICOLON

   41 update_y: DCOL update_command
   42         | update_y DCOL update_command

   43 gf: ISI
   44   | TRUE
   45   | FALSE
   46   | gf OR gf
   47   | gf AND gf
   48   | gf IMPLIES gf
   49   | gf IFF gf
   50   | G gf
   51   | F gf
   52   | X gf
   53   | U gf
   54   | NOT gf
   55   | LB gf RB

   56 goal_form: DCOL gf SEMICOLON
   57          | goal_form SL gf


Terminals, with rules where they appear

$end (0) 0
error (256)
MODULE (258) 1 2
ISI (259) 5 7 14 23 34 35 38 43
CONTROL (260) 1 2
VAR (261)
INIT (262) 1 2
UPDATE (263) 1 2
END (264)
COMMA (265) 6 33 36 39
DCOL (266) 8 9 41 42 56
ASSIGN (267) 10 11
TRUE (268) 12 15 24 34 44
FALSE (269) 13 16 25 35 45
EQUALS (270) 34 35 38
NEXT (271) 34 35 38
SEMICOLON (272) 37 40 56
GOAL (273) 1
OR (274) 17 26 46
AND (275) 18 27 47
IMPLIES (276) 19 28 48
IFF (277) 20 29 49
LB (278) 22 31 55
RB (279) 22 31 55
NOT (280) 21 30 54
LTL (281)
G (282) 50
F (283) 51
X (284) 52
U (285) 53
ENVIRONMENT (286)
PROPF (287) 4
SL (288) 57


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
input (35)
    on left: 1 2 3 4, on right: 0 3 4
var_y (36)
    on left: 5 6, on right: 1 2 6
id_y (37)
    on left: 7, on right: 1 2
init_y (38)
    on left: 8 9, on right: 1 2 9
init_command (39)
    on left: 10, on right: 8 9
update_command (40)
    on left: 11, on right: 41 42
init_condition (41)
    on left: 12 13, on right: 10
formula_guard (42)
    on left: 14 15 16 17 18 19 20 21 22, on right: 17 18 19 20 21 22
    32
formula_assign (43)
    on left: 23 24 25 26 27 28 29 30 31, on right: 26 27 28 29 30 31
    38
update_condition (44)
    on left: 32 33, on right: 11 33
init_next_state (45)
    on left: 34 35 36 37, on right: 10 36 37
update_next_state (46)
    on left: 38 39 40, on right: 11 39 40
update_y (47)
    on left: 41 42, on right: 1 2 42
gf (48)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 46 47
    48 49 50 51 52 53 54 55 56 57
goal_form (49)
    on left: 56 57, on right: 1 4 57


State 0

    0 $accept: . input $end

    MODULE  shift, and go to state 1

    input  go to state 2


State 1

    1 input: MODULE . id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE . id_y CONTROL var_y INIT init_y UPDATE update_y

    ISI  shift, and go to state 3

    id_y  go to state 4


State 2

    0 $accept: input . $end
    3 input: input . input
    4      | input . PROPF goal_form

    $end    shift, and go to state 5
    MODULE  shift, and go to state 1
    PROPF   shift, and go to state 6

    input  go to state 7


State 3

    7 id_y: ISI .

    $default  reduce using rule 7 (id_y)


State 4

    1 input: MODULE id_y . CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y . CONTROL var_y INIT init_y UPDATE update_y

    CONTROL  shift, and go to state 8


State 5

    0 $accept: input $end .

    $default  accept


State 6

    4 input: input PROPF . goal_form

    DCOL  shift, and go to state 9

    goal_form  go to state 10


State 7

    3 input: input . input
    3      | input input .
    4      | input . PROPF goal_form

    MODULE  shift, and go to state 1
    PROPF   shift, and go to state 6

    MODULE    [reduce using rule 3 (input)]
    PROPF     [reduce using rule 3 (input)]
    $default  reduce using rule 3 (input)

    input  go to state 7


State 8

    1 input: MODULE id_y CONTROL . var_y INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL . var_y INIT init_y UPDATE update_y

    ISI  shift, and go to state 11

    var_y  go to state 12


State 9

   56 goal_form: DCOL . gf SEMICOLON

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 22


State 10

    4 input: input PROPF goal_form .
   57 goal_form: goal_form . SL gf

    SL  shift, and go to state 23

    $default  reduce using rule 4 (input)


State 11

    5 var_y: ISI .

    $default  reduce using rule 5 (var_y)


State 12

    1 input: MODULE id_y CONTROL var_y . INIT init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y . INIT init_y UPDATE update_y
    6 var_y: var_y . COMMA var_y

    INIT   shift, and go to state 24
    COMMA  shift, and go to state 25


State 13

   43 gf: ISI .

    $default  reduce using rule 43 (gf)


State 14

   44 gf: TRUE .

    $default  reduce using rule 44 (gf)


State 15

   45 gf: FALSE .

    $default  reduce using rule 45 (gf)


State 16

   55 gf: LB . gf RB

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 26


State 17

   54 gf: NOT . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 27


State 18

   50 gf: G . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 28


State 19

   51 gf: F . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 29


State 20

   52 gf: X . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 30


State 21

   53 gf: U . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 31


State 22

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   56 goal_form: DCOL gf . SEMICOLON

    SEMICOLON  shift, and go to state 32
    OR         shift, and go to state 33
    AND        shift, and go to state 34
    IMPLIES    shift, and go to state 35
    IFF        shift, and go to state 36


State 23

   57 goal_form: goal_form SL . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 37


State 24

    1 input: MODULE id_y CONTROL var_y INIT . init_y UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT . init_y UPDATE update_y

    DCOL  shift, and go to state 38

    init_y  go to state 39


State 25

    6 var_y: var_y COMMA . var_y

    ISI  shift, and go to state 11

    var_y  go to state 40


State 26

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   55   | LB gf . RB

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36
    RB       shift, and go to state 41


State 27

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   54   | NOT gf .

    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    IMPLIES   [reduce using rule 54 (gf)]
    IFF       [reduce using rule 54 (gf)]
    $default  reduce using rule 54 (gf)


State 28

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   50   | G gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 50 (gf)]
    AND       [reduce using rule 50 (gf)]
    IMPLIES   [reduce using rule 50 (gf)]
    IFF       [reduce using rule 50 (gf)]
    $default  reduce using rule 50 (gf)


State 29

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   51   | F gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 51 (gf)]
    AND       [reduce using rule 51 (gf)]
    IMPLIES   [reduce using rule 51 (gf)]
    IFF       [reduce using rule 51 (gf)]
    $default  reduce using rule 51 (gf)


State 30

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   52   | X gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 52 (gf)]
    AND       [reduce using rule 52 (gf)]
    IMPLIES   [reduce using rule 52 (gf)]
    IFF       [reduce using rule 52 (gf)]
    $default  reduce using rule 52 (gf)


State 31

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   53   | U gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 53 (gf)]
    AND       [reduce using rule 53 (gf)]
    IMPLIES   [reduce using rule 53 (gf)]
    IFF       [reduce using rule 53 (gf)]
    $default  reduce using rule 53 (gf)


State 32

   56 goal_form: DCOL gf SEMICOLON .

    $default  reduce using rule 56 (goal_form)


State 33

   46 gf: gf OR . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 42


State 34

   47 gf: gf AND . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 43


State 35

   48 gf: gf IMPLIES . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 44


State 36

   49 gf: gf IFF . gf

    ISI    shift, and go to state 13
    TRUE   shift, and go to state 14
    FALSE  shift, and go to state 15
    LB     shift, and go to state 16
    NOT    shift, and go to state 17
    G      shift, and go to state 18
    F      shift, and go to state 19
    X      shift, and go to state 20
    U      shift, and go to state 21

    gf  go to state 45


State 37

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   57 goal_form: goal_form SL gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    $default  reduce using rule 57 (goal_form)


State 38

    8 init_y: DCOL . init_command

    TRUE   shift, and go to state 46
    FALSE  shift, and go to state 47

    init_command    go to state 48
    init_condition  go to state 49


State 39

    1 input: MODULE id_y CONTROL var_y INIT init_y . UPDATE update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y . UPDATE update_y
    9 init_y: init_y . DCOL init_command

    UPDATE  shift, and go to state 50
    DCOL    shift, and go to state 51


State 40

    6 var_y: var_y . COMMA var_y
    6      | var_y COMMA var_y .

    COMMA  shift, and go to state 25

    COMMA     [reduce using rule 6 (var_y)]
    $default  reduce using rule 6 (var_y)


State 41

   55 gf: LB gf RB .

    $default  reduce using rule 55 (gf)


State 42

   46 gf: gf . OR gf
   46   | gf OR gf .
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf

    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    IMPLIES   [reduce using rule 46 (gf)]
    IFF       [reduce using rule 46 (gf)]
    $default  reduce using rule 46 (gf)


State 43

   46 gf: gf . OR gf
   47   | gf . AND gf
   47   | gf AND gf .
   48   | gf . IMPLIES gf
   49   | gf . IFF gf

    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    IMPLIES   [reduce using rule 47 (gf)]
    IFF       [reduce using rule 47 (gf)]
    $default  reduce using rule 47 (gf)


State 44

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   48   | gf IMPLIES gf .
   49   | gf . IFF gf

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 48 (gf)]
    AND       [reduce using rule 48 (gf)]
    IMPLIES   [reduce using rule 48 (gf)]
    IFF       [reduce using rule 48 (gf)]
    $default  reduce using rule 48 (gf)


State 45

   46 gf: gf . OR gf
   47   | gf . AND gf
   48   | gf . IMPLIES gf
   49   | gf . IFF gf
   49   | gf IFF gf .

    OR       shift, and go to state 33
    AND      shift, and go to state 34
    IMPLIES  shift, and go to state 35
    IFF      shift, and go to state 36

    OR        [reduce using rule 49 (gf)]
    AND       [reduce using rule 49 (gf)]
    IMPLIES   [reduce using rule 49 (gf)]
    IFF       [reduce using rule 49 (gf)]
    $default  reduce using rule 49 (gf)


State 46

   12 init_condition: TRUE .

    $default  reduce using rule 12 (init_condition)


State 47

   13 init_condition: FALSE .

    $default  reduce using rule 13 (init_condition)


State 48

    8 init_y: DCOL init_command .

    $default  reduce using rule 8 (init_y)


State 49

   10 init_command: init_condition . ASSIGN init_next_state

    ASSIGN  shift, and go to state 52


State 50

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE . update_y GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE . update_y

    DCOL  shift, and go to state 53

    update_y  go to state 54


State 51

    9 init_y: init_y DCOL . init_command

    TRUE   shift, and go to state 46
    FALSE  shift, and go to state 47

    init_command    go to state 55
    init_condition  go to state 49


State 52

   10 init_command: init_condition ASSIGN . init_next_state

    ISI  shift, and go to state 56

    init_next_state  go to state 57


State 53

   41 update_y: DCOL . update_command

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    update_command    go to state 63
    formula_guard     go to state 64
    update_condition  go to state 65


State 54

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y . GOAL goal_form
    2      | MODULE id_y CONTROL var_y INIT init_y UPDATE update_y .
   42 update_y: update_y . DCOL update_command

    DCOL  shift, and go to state 66
    GOAL  shift, and go to state 67

    $default  reduce using rule 2 (input)


State 55

    9 init_y: init_y DCOL init_command .

    $default  reduce using rule 9 (init_y)


State 56

   34 init_next_state: ISI . NEXT EQUALS TRUE
   35                | ISI . NEXT EQUALS FALSE

    NEXT  shift, and go to state 68


State 57

   10 init_command: init_condition ASSIGN init_next_state .
   36 init_next_state: init_next_state . COMMA init_next_state
   37                | init_next_state . SEMICOLON

    COMMA      shift, and go to state 69
    SEMICOLON  shift, and go to state 70

    $default  reduce using rule 10 (init_command)


State 58

   14 formula_guard: ISI .

    $default  reduce using rule 14 (formula_guard)


State 59

   15 formula_guard: TRUE .

    $default  reduce using rule 15 (formula_guard)


State 60

   16 formula_guard: FALSE .

    $default  reduce using rule 16 (formula_guard)


State 61

   22 formula_guard: LB . formula_guard RB

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 71


State 62

   21 formula_guard: NOT . formula_guard

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 72


State 63

   41 update_y: DCOL update_command .

    $default  reduce using rule 41 (update_y)


State 64

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard
   32 update_condition: formula_guard .

    OR       shift, and go to state 73
    AND      shift, and go to state 74
    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    $default  reduce using rule 32 (update_condition)


State 65

   11 update_command: update_condition . ASSIGN update_next_state
   33 update_condition: update_condition . COMMA update_condition

    COMMA   shift, and go to state 77
    ASSIGN  shift, and go to state 78


State 66

   42 update_y: update_y DCOL . update_command

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    update_command    go to state 79
    formula_guard     go to state 64
    update_condition  go to state 65


State 67

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL . goal_form

    DCOL  shift, and go to state 9

    goal_form  go to state 80


State 68

   34 init_next_state: ISI NEXT . EQUALS TRUE
   35                | ISI NEXT . EQUALS FALSE

    EQUALS  shift, and go to state 81


State 69

   36 init_next_state: init_next_state COMMA . init_next_state

    ISI  shift, and go to state 56

    init_next_state  go to state 82


State 70

   37 init_next_state: init_next_state SEMICOLON .

    $default  reduce using rule 37 (init_next_state)


State 71

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard
   22              | LB formula_guard . RB

    OR       shift, and go to state 73
    AND      shift, and go to state 74
    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76
    RB       shift, and go to state 83


State 72

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard
   21              | NOT formula_guard .

    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    IMPLIES   [reduce using rule 21 (formula_guard)]
    IFF       [reduce using rule 21 (formula_guard)]
    $default  reduce using rule 21 (formula_guard)


State 73

   17 formula_guard: formula_guard OR . formula_guard

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 84


State 74

   18 formula_guard: formula_guard AND . formula_guard

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 85


State 75

   19 formula_guard: formula_guard IMPLIES . formula_guard

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 86


State 76

   20 formula_guard: formula_guard IFF . formula_guard

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard  go to state 87


State 77

   33 update_condition: update_condition COMMA . update_condition

    ISI    shift, and go to state 58
    TRUE   shift, and go to state 59
    FALSE  shift, and go to state 60
    LB     shift, and go to state 61
    NOT    shift, and go to state 62

    formula_guard     go to state 64
    update_condition  go to state 88


State 78

   11 update_command: update_condition ASSIGN . update_next_state

    ISI  shift, and go to state 89

    update_next_state  go to state 90


State 79

   42 update_y: update_y DCOL update_command .

    $default  reduce using rule 42 (update_y)


State 80

    1 input: MODULE id_y CONTROL var_y INIT init_y UPDATE update_y GOAL goal_form .
   57 goal_form: goal_form . SL gf

    SL  shift, and go to state 23

    $default  reduce using rule 1 (input)


State 81

   34 init_next_state: ISI NEXT EQUALS . TRUE
   35                | ISI NEXT EQUALS . FALSE

    TRUE   shift, and go to state 91
    FALSE  shift, and go to state 92


State 82

   36 init_next_state: init_next_state . COMMA init_next_state
   36                | init_next_state COMMA init_next_state .
   37                | init_next_state . SEMICOLON

    COMMA      shift, and go to state 69
    SEMICOLON  shift, and go to state 70

    COMMA      [reduce using rule 36 (init_next_state)]
    SEMICOLON  [reduce using rule 36 (init_next_state)]
    $default   reduce using rule 36 (init_next_state)


State 83

   22 formula_guard: LB formula_guard RB .

    $default  reduce using rule 22 (formula_guard)


State 84

   17 formula_guard: formula_guard . OR formula_guard
   17              | formula_guard OR formula_guard .
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard

    AND      shift, and go to state 74
    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    IMPLIES   [reduce using rule 17 (formula_guard)]
    IFF       [reduce using rule 17 (formula_guard)]
    $default  reduce using rule 17 (formula_guard)


State 85

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   18              | formula_guard AND formula_guard .
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard

    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    IMPLIES   [reduce using rule 18 (formula_guard)]
    IFF       [reduce using rule 18 (formula_guard)]
    $default  reduce using rule 18 (formula_guard)


State 86

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   19              | formula_guard IMPLIES formula_guard .
   20              | formula_guard . IFF formula_guard

    OR       shift, and go to state 73
    AND      shift, and go to state 74
    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    OR        [reduce using rule 19 (formula_guard)]
    AND       [reduce using rule 19 (formula_guard)]
    IMPLIES   [reduce using rule 19 (formula_guard)]
    IFF       [reduce using rule 19 (formula_guard)]
    $default  reduce using rule 19 (formula_guard)


State 87

   17 formula_guard: formula_guard . OR formula_guard
   18              | formula_guard . AND formula_guard
   19              | formula_guard . IMPLIES formula_guard
   20              | formula_guard . IFF formula_guard
   20              | formula_guard IFF formula_guard .

    OR       shift, and go to state 73
    AND      shift, and go to state 74
    IMPLIES  shift, and go to state 75
    IFF      shift, and go to state 76

    OR        [reduce using rule 20 (formula_guard)]
    AND       [reduce using rule 20 (formula_guard)]
    IMPLIES   [reduce using rule 20 (formula_guard)]
    IFF       [reduce using rule 20 (formula_guard)]
    $default  reduce using rule 20 (formula_guard)


State 88

   33 update_condition: update_condition . COMMA update_condition
   33                 | update_condition COMMA update_condition .

    COMMA  shift, and go to state 77

    COMMA     [reduce using rule 33 (update_condition)]
    $default  reduce using rule 33 (update_condition)


State 89

   38 update_next_state: ISI . NEXT EQUALS formula_assign

    NEXT  shift, and go to state 93


State 90

   11 update_command: update_condition ASSIGN update_next_state .
   39 update_next_state: update_next_state . COMMA update_next_state
   40                  | update_next_state . SEMICOLON

    COMMA      shift, and go to state 94
    SEMICOLON  shift, and go to state 95

    $default  reduce using rule 11 (update_command)


State 91

   34 init_next_state: ISI NEXT EQUALS TRUE .

    $default  reduce using rule 34 (init_next_state)


State 92

   35 init_next_state: ISI NEXT EQUALS FALSE .

    $default  reduce using rule 35 (init_next_state)


State 93

   38 update_next_state: ISI NEXT . EQUALS formula_assign

    EQUALS  shift, and go to state 96


State 94

   39 update_next_state: update_next_state COMMA . update_next_state

    ISI  shift, and go to state 89

    update_next_state  go to state 97


State 95

   40 update_next_state: update_next_state SEMICOLON .

    $default  reduce using rule 40 (update_next_state)


State 96

   38 update_next_state: ISI NEXT EQUALS . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 103


State 97

   39 update_next_state: update_next_state . COMMA update_next_state
   39                  | update_next_state COMMA update_next_state .
   40                  | update_next_state . SEMICOLON

    COMMA      shift, and go to state 94
    SEMICOLON  shift, and go to state 95

    COMMA      [reduce using rule 39 (update_next_state)]
    SEMICOLON  [reduce using rule 39 (update_next_state)]
    $default   reduce using rule 39 (update_next_state)


State 98

   23 formula_assign: ISI .

    $default  reduce using rule 23 (formula_assign)


State 99

   24 formula_assign: TRUE .

    $default  reduce using rule 24 (formula_assign)


State 100

   25 formula_assign: FALSE .

    $default  reduce using rule 25 (formula_assign)


State 101

   31 formula_assign: LB . formula_assign RB

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 104


State 102

   30 formula_assign: NOT . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 105


State 103

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign
   38 update_next_state: ISI NEXT EQUALS formula_assign .

    OR       shift, and go to state 106
    AND      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    $default  reduce using rule 38 (update_next_state)


State 104

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign
   31               | LB formula_assign . RB

    OR       shift, and go to state 106
    AND      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109
    RB       shift, and go to state 110


State 105

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign
   30               | NOT formula_assign .

    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    IMPLIES   [reduce using rule 30 (formula_assign)]
    IFF       [reduce using rule 30 (formula_assign)]
    $default  reduce using rule 30 (formula_assign)


State 106

   26 formula_assign: formula_assign OR . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 111


State 107

   27 formula_assign: formula_assign AND . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 112


State 108

   28 formula_assign: formula_assign IMPLIES . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 113


State 109

   29 formula_assign: formula_assign IFF . formula_assign

    ISI    shift, and go to state 98
    TRUE   shift, and go to state 99
    FALSE  shift, and go to state 100
    LB     shift, and go to state 101
    NOT    shift, and go to state 102

    formula_assign  go to state 114


State 110

   31 formula_assign: LB formula_assign RB .

    $default  reduce using rule 31 (formula_assign)


State 111

   26 formula_assign: formula_assign . OR formula_assign
   26               | formula_assign OR formula_assign .
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign

    AND      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    IMPLIES   [reduce using rule 26 (formula_assign)]
    IFF       [reduce using rule 26 (formula_assign)]
    $default  reduce using rule 26 (formula_assign)


State 112

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   27               | formula_assign AND formula_assign .
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign

    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    IMPLIES   [reduce using rule 27 (formula_assign)]
    IFF       [reduce using rule 27 (formula_assign)]
    $default  reduce using rule 27 (formula_assign)


State 113

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   28               | formula_assign IMPLIES formula_assign .
   29               | formula_assign . IFF formula_assign

    OR       shift, and go to state 106
    AND      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    OR        [reduce using rule 28 (formula_assign)]
    AND       [reduce using rule 28 (formula_assign)]
    IMPLIES   [reduce using rule 28 (formula_assign)]
    IFF       [reduce using rule 28 (formula_assign)]
    $default  reduce using rule 28 (formula_assign)


State 114

   26 formula_assign: formula_assign . OR formula_assign
   27               | formula_assign . AND formula_assign
   28               | formula_assign . IMPLIES formula_assign
   29               | formula_assign . IFF formula_assign
   29               | formula_assign IFF formula_assign .

    OR       shift, and go to state 106
    AND      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    IFF      shift, and go to state 109

    OR        [reduce using rule 29 (formula_assign)]
    AND       [reduce using rule 29 (formula_assign)]
    IMPLIES   [reduce using rule 29 (formula_assign)]
    IFF       [reduce using rule 29 (formula_assign)]
    $default  reduce using rule 29 (formula_assign)
